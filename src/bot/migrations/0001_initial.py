# Generated by Django 3.0.3 on 2020-03-31 14:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('popularity', models.BigIntegerField(blank=True, null=True)),
                ('href', models.TextField(blank=True, null=True)),
                ('spotify_url', models.TextField(blank=True, null=True)),
                ('album_type', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('release_date_precision', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlbumArtistThrough',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'album_artist_through',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlbumGenreThrough',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'album_genre_through',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('popularity', models.BigIntegerField(blank=True, null=True)),
                ('href', models.TextField(blank=True, null=True)),
                ('spotify_url', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistGenreThrough',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'artist_genre_through',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('playlist_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chatlink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'chatlink',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Followedartist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_at', models.DateTimeField()),
                ('last_lookup', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'followedartist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('name', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('url', models.TextField()),
                ('link_type', models.TextField(blank=True, null=True)),
                ('streaming_service_type', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('artist_name', models.TextField(blank=True, null=True)),
                ('album_name', models.TextField(blank=True, null=True)),
                ('track_name', models.TextField(blank=True, null=True)),
                ('genre', models.TextField(blank=True, null=True)),
                ('user_id', models.TextField(blank=True, null=True)),
                ('chat_id', models.TextField()),
                ('last_update_user_id', models.TextField(blank=True, null=True)),
                ('times_sent', models.BigIntegerField(blank=True, null=True)),
                ('artist_id', models.TextField(blank=True, null=True)),
                ('album_id', models.TextField(blank=True, null=True)),
                ('track_id', models.TextField(blank=True, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Savedlink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'savedlink',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('track_number', models.BigIntegerField(blank=True, null=True)),
                ('duration_ms', models.BigIntegerField(blank=True, null=True)),
                ('explicit', models.BooleanField(blank=True, null=True)),
                ('popularity', models.BigIntegerField(blank=True, null=True)),
                ('href', models.TextField(blank=True, null=True)),
                ('spotify_url', models.TextField(blank=True, null=True)),
                ('preview_url', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
                ('album_id', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrackArtistThrough',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'track_artist_through',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('username', models.TextField(blank=True, null=True)),
                ('first_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lastfmusername',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bot.User')),
                ('username', models.TextField(blank=True, null=True, unique=True)),
            ],
            options={
                'db_table': 'lastfmusername',
                'managed': False,
            },
        ),
    ]
